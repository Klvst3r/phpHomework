Developments Steps

------------------------------ Prepare BD -----------------------------------------------
1.  Create Structure of Database
2.  Export Structure of DataBase

----------------- Begin Create Directory Structure---------------------------------------
3.  Add Assets
4.  Create Index Page Front End [index.php]
5.  Create Login Page Front and Back End [login.php]
6.  Insert and export Initial data of Login Access
----------------------------- Access to BD -----------------------------------------
7.  Create a Connection to the Database [data/Connect.php]
9.  Create Model User [model/User.php]
10. Create Data Access Object to User [data/UserDAO.php]
11. DAO for user and password [data/UserDAO.php]
------------------------------ Construct Controller
12. Execute login, make User Controller [controller/UserController.php]
13. Create Index to test the connection and test UserDAO [view/index.php | data/UserDAO.php]
14. Test Successfull Conection with user_name and password [view/index.php(klvst3r/1234)]
-----------------------------  Login Validation ---------------------------------------
15. Receive data in ValidaCode from Login [view/validaCode.php]
16. Make validation of data from login in AJAX [assets/js/app.js]
17. Use Plugin overhang to make personal config responses [assets/js/overhang.min.js | assets/css/overhang.min.css]
18. Success Response and status true if it is correct login and redirect or false return to login [assets/js/app.js]
19. Create file helps to validate and clean flieds and use in validaCode [helps/helps.php | view/validaCode.php]
------------------------------- Start Sessions Variables -----------------------------
20. Obtain the user_name for the session, create getUser [data/UserDAO.php] and create controller [controller/UserController.php]
21. Work with session [view/validaCode.php], redirect [assets/js/apps.js] and Create Admin [view/admin.php]
22. Creating Close Session [view/signout.php]
------------------------------- Create Wrap System -----------------------------------
23, Creating menu, and main header and main footer [partials/menu.php | partials/mainHead.php | partials/mainFooter.php]
24. Working with diferenst [logged_in.php] user and privileges [partials/menu.php]
25. Validatión against return return and forward [assets/partials/menu.php | assets/partials/menu.php]
-------------------------------- Admin Page ------------------------------------------
26. Creating admin page [admin.php] and folder of admin [view/admin/index.php]
27. Creating assets for admin [admin/inc/adminHead.php | admin/inc/adminHead.php | admin/inc/adminFooter.php]
----------------------------- Incorporate JS, CSS and Bootstrap ------------------------
28. Add assets for admin [assets/bootstrap, assets/css, assets/font-awesome, assets/jquery, assets/jss, assets/metisMenu]
29. Creating action for admin menu [admin/action.php]
30. Creatin of user perfil and config [admin/view/perfil.php | admin/view/config.php]
----------------------------- Views Admin -----------------------------------------------
31. Creating view list user [admin/view/users.php]
32. Creating List User Class Definition [admin/sql/ListUser.php]
----------------------------- Clases, Model Views and Controller of Data Table  --------------------------
33. Send Data and Params to Class List User [admin/view/users.php]
34. Add table privileges in BD, export estructure and data [assets/bd/0.Diseño/ | assets/bd/1. first stage | assets/bd/2.Second Stage]
35. Modified Model [model/User.php], User Controller [controller/UserController.php,  Principal Class [data/UserDAO.php] and validCode [	view/validaCode.php]
36. Modify query to construct table list users in admin page [admin/view/users.php]
---------------------------- Form to Create Nuew User ------------------------------------
37. Create Class Form with principal fields to create a form [data/Form.php]
38. Create Class Combo to create combos in forms for administrator user [admin/sql/Combo.php]
--------------- Create Files, Clases, Models Controllers and Views for Privileges ------------------------------------------
39. Create List Privileges Form [admin/view/privileges.php]
40. Create List Privileges Form [admin/view/newPrivilegeForm.php]
41. Create Model Privilege [model/Privilege.php]
42. Create Controller Privilege [controllerPrivilegeController.php]
43. Create Class PRivilege to obtain in a Table the Privileges from BD [admin/sql/Privilege.php]
44. Add function to free liberate memory after Show data in tables from DB [admin/sql/User.php |admin/sql/Privilege.php]
---------------------------- Process of Add Privileges -----------------------------------------
45. We start from the list of privileges showing the table of contents
	[admin/view/privileges.php]
46. Through the "new privilege" button we go to the new privilege Registration form
	[admin/view/newPrivilegeForm.php]
		A) It includes the class for the call of the function of obtaining table of data with privileges
			[admin/sql/PrivilegeSQL.php]
		B)  Management header is included
			[admin/inc/adminHead.php]
		C)  The class to build forms is included
			[data/Form.php]
		D)	Included class to build combos
			[admin/sql/Combo.php]
47. The parameters are passed to verify if the parameters are sent by the "POST" method and are validated to send data to the
	privilege controller
	[admin/view/addNewPrivilege.php]
		A) 	Management header is included
			[admin/inc/adminHead.php]

		B)	Controlador de Privilegios
		 	[controller/PrivilegeController.php]

		C)	Helpers to validate fiels
			[helps/helps.php]
48.	Through the privilege controller, an object is created and data is sent using the object to the Privilege model
	[controller/PrivilegeController.php]
		A)	Privileges model included
			[model/Privilege.php]
49. The PrivilegeDAO class establishes a connection with the DB, creates the query, receives the information in a form
	of parameters of the DB model and executes the query
	[data/PrivilegeDAO.php]
		A)	Connection with the DB is included
			[data/Connect.php]
		B)	Privilege registration function in included
			[model/Privilege.php]
50. The latter script (data / PrivilegeDAO.php) returns control to the privilege controller in the data logging script (admin / view /
	privileges.php) by the controller's regPrivilege method. Ending by redirection to the view of the list of privileges
	[admin/view/privileges.php]
---------------------------- Process of Add User -----------------------------------------
51. We start from the list of Users showing the table of contents
	[admin/view/users.php] -> submit (action.php?a=4 )
52. Through the "new user" button we go to the new user Registration form
	[admin/view/newUserForm.php]
		A) It includes the class for the call of the function of obtaining table of data with users
			[admin/sql/UserSQL.php]
		B)  Management header is included
			[admin/inc/adminHead.php]
		C)  The class to build forms is included
			[data/Form.php]
		D)	Included class to build combos
			[admin/sql/Combo.php]
53. The parameters are passed to verify if the parameters are sent by the "POST" method and are validated to send data to the
	user controller
	[admin/view/addNewUser.php]
		A) 	Management header is included
			[admin/inc/adminHead.php]
		B)	Controlador de Usurs
		 	[controller/UserController.php]
		C)	Helpers to validate fiels
			[helps/helps.php]
54.	Through the User controller, an object is created and data is sent using the object to the User model
	[controller/UserController.php]
		A)	User model included
			[model/User.php]
55. The UserDAO class establishes a connection with the DB, creates the query, receives the information in a form
	of parameters of the DB model and executes the query
	[data/UserDAO.php]
		A)	Connection with the DB is included
			[data/Connect.php]
		B)	User registration function in included
			[model/User.php]
56. The latter script (data / UserDAO.php) returns control to the privilege controller in the data logging script (admin / view /
	users.php) by the controller's regUser method. Ending by redirection to the view of the list of privileges
	[admin/view/users.php]
	---------------------------- Process of Change Admin Password -----------------------------------------
57. Begin changing the view of Admin Configuration
		[admin/view/config.php]
		A) Class to Create forms
				[data/Form.php]
		B)  Management header is included
			[admin/inc/adminHead.php]
		C)  Management Menu is included
			[admin/inc/adminMenu.php]
		D) Add nuew option in menu Action
			[admin/action.php]
58. The parameters are passed to verify if the parameters are sent by the "POST" method and are validated to send data to the
	user controller
	[admin/view/changePass.php]
		A) 	Management header is included
			[admin/inc/adminHead.php]
		B)	Controlador de Usurs
		 	[controller/UserController.php]
		C)	Helpers to validate fiels
			[helps/helps.php]
59.	Through the User controller, new method changePass(params) an object is created and data is sent using the object to the User model
	[controller/UserController.php]
		A)	User model included and modified to add new method changePass
			[model/User.php]
60-A. In the UserDAO method changePass is included, class USERDAO establishes a connection with the DB to find user to change password,
		creates the queries to select, receives the information in a form of parameters of the DB model and executes the query to find user
		[data/UserDAO.php]
			A)	Connection with the DB is included
				[data/Connect.php]
			B)	The model is modified to insert the setters and getters to new password
				[model/User.php]
60-B. If the user is founded in UserDAO it verify if the actual and new password are the same, if ti is, create a query to update the password,
		  execute the update and return the control to the index in admin Panel
			[data / UserDAO.php]
			A)	Connection with the DB is included
				[data/Connect.php]
			B)	User selection and update in  function in changePass is included
				[model/User.php]
----------------------------- Process of Edit Privilege -----------------------------------------
61. From the privilege list view, the information in the table is modified to add the USER
			[admin/view/privileges.php]
			A) From the privilege list, the information in the table is modified to add the USER ID
					[admin/sql/PrivilegeSQL.php]
			B) The variable is received by the GET method with the User ID to generate a query for obtaining values ​​for the form
				and make query to select the correct value in BD and put it in field Description Privilege. In adition Create new
				field hidden with id_user value
				 [admin/view/newPrivilegeForm.php]
		  C) Create file to stablish a conection and make the query to obtain data from query to the values in Form
				[admin/sql/Data.php]
62. A new verification is added with the User ID to execute the update of the current field
		[admin/view/addNewPrivilege.php]
		A) Create a new method updatePrivilege in Privilege Controller to update Values in BD
				[controller/PrivilegeController.php]
		B) In PrivilegeDAO the insertion ocurs receiving 1 object with the ID User and the Description for the Privilege
			[data/PrivilegeDAO.php]
----------------------------- Process of Delete Privilege -----------------------------------------
63. From the privilege list view, ID USER is Send to acept o denied the action to delete record
			[admin/view/privileges.php]
			A) From the privilege list, the information in the table is showed with the botton Delete
					[admin/sql/PrivilegeSQL.php]
			B) The variable is received by the GET method with the User ID to generate a query for delete record  in BD through
				the Privilege Controller.
				 [admin/view/delPrivilege.php]
64. The privilege Controller receibe the id and put it in an object and return the object to Ptivilege Controller
		[controller/PrivilegeController.php]
		A) Receibe the object in method delPrivilege in PrivilegeDAO to execute the deletion
			[data/PrivilegeDAO.php]
		B) After the deletion the controller return the control to the view principal in panel admin an redirect to the Privilege List
----------------------------- Process of Edit Privilege -----------------------------------------
61. From the User list view, the information in the table is modified to add the USER
			[admin/view/users.php]
			A) From the User list, the information in the table is modified to add the USER ID
					[admin/sql/User.php]
			B) The variable is received by the GET method with the User ID to generate a query for obtaining values ​​for the form
				and make query to select the correct value in BD and put it in field Description User. In adition Create new
				field hidden with id_user value
				 [admin/view/newUserForm.php]
		  C) Create file to stablish a conection and make the query to obtain data from query to the values in Form
				[admin/sql/Data.php]
62. A new verification is added with the User ID to execute the update of the current field
		[admin/view/addNewPrivilege.php]
		A) Create a new method updatePrivilege in Privilege Controller to update Values in BD
				[controller/PrivilegeController.php]
		B) In PrivilegeDAO the insertion ocurs receiving 1 object with the ID User and the Description for the Privilege
			[data/PrivilegeDAO.php]
		C) Fixed the function combo to recibe vaues if data is from an Update Form
			[admin/sql/Combo.php]

63. Receibe data from Update Form to execute the update only with data modified
		[admin/view/addNewUser.php]
		A) Create a new method to update User data
			 [controller/UserController.php]
		B) Create a new method to receive values to edit an user
			[data/UserDAO.php]
			After this return the control to the list Users
