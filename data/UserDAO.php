<?php 


//Import conection
include 'Connect.php';
include '../model/User.php';
//Extiends the conection, inheriting all of Conecction that is the function connection and now it can use the content of file.
class UserDAO extends Connect {
	//Variable protected
	protected static $cnx;

	//Funcion que permite conectar en todo momento
	private static function getConection(){
		//self to invoke this class and invoke $cnx
		/* With this the variable $cnx is generated, and is filled with the connection when the connection itself is established*/
		self::$cnx = Connect::connection();
		
	}

	//Method to disconnectfrom BD
	/* Private because they will not be used in any other case or externally and are of private scope
		getting the concept of encapsulation*/

	private static function disconnect(){
		//This close the conection in PDO
		
		self::$cnx = null;
	}

	/* Method to log the user
	 * This function what you will receive is a user as parameter and it will be the entity that will receive 
	 * the imported user entity in the second include.
	 */
	/* Method that serves to validate the login
     * @param object $usuario
	 * @return boolean
	 */
	
	public static function login($user){
		// A query is generated by selecting the fields that will be sent via AJAX and do not compromise the security
		// of the system as they are visible via HTML.
		
		
		$query = "SELECT id_user, user_name, user_email, name, privilege, date_reg FROM users WHERE user_name = :user_name AND 
		user_password_hash = :password";
		
		
		//We select all user information
		//$query = "SELECT * FROM users WHERE user_name = :user_name AND user_password_hash = :password";
		
		//Initialize the connection
		self::getConection();
		
		//Returns the result, preparing the query
		$result = self::$cnx->prepare($query);

		//The parameters are sent the user in the form by user_name field, the object $user, to the user of the form
		$user_bd = $user->getUser_name();


		$result->bindParam(":user_name", $user_bd);

		//The same with the password, Passing the parameter directly to this query
		$pass_bd = $user->getUser_password_hash();


		$result->bindParam(":password", $pass_bd);

		//We run the query the PDO connection
		$result->execute();

		
		if(count($result)){
			return true;
		}
		
		return false;

	}

	


}

